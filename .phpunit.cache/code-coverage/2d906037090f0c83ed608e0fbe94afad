a:6:{s:9:"classesIn";a:0:{}s:8:"traitsIn";a:1:{s:42:"Umbrellio\Postgres\Helpers\IndexAssertions";a:6:{s:4:"name";s:15:"IndexAssertions";s:14:"namespacedName";s:42:"Umbrellio\Postgres\Helpers\IndexAssertions";s:9:"namespace";s:26:"Umbrellio\Postgres\Helpers";s:9:"startLine";i:12;s:7:"endLine";i:85;s:7:"methods";a:14:{s:13:"assertNotNull";a:6:{s:10:"methodName";s:13:"assertNotNull";s:9:"signature";s:45:"assertNotNull($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:14;s:7:"endLine";i:14;s:3:"ccn";i:0;}s:10:"assertSame";a:6:{s:10:"methodName";s:10:"assertSame";s:9:"signature";s:53:"assertSame($expected, $actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:16;s:7:"endLine";i:16;s:3:"ccn";i:0;}s:10:"assertNull";a:6:{s:10:"methodName";s:10:"assertNull";s:9:"signature";s:42:"assertNull($actual, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:18;s:7:"endLine";i:18;s:3:"ccn";i:0;}s:30:"assertMatchesRegularExpression";a:6:{s:10:"methodName";s:30:"assertMatchesRegularExpression";s:9:"signature";s:86:"assertMatchesRegularExpression(string $pattern, string $string, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:20;s:7:"endLine";i:24;s:3:"ccn";i:0;}s:10:"assertTrue";a:6:{s:10:"methodName";s:10:"assertTrue";s:9:"signature";s:45:"assertTrue($condition, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:26;s:7:"endLine";i:26;s:3:"ccn";i:0;}s:11:"assertFalse";a:6:{s:10:"methodName";s:11:"assertFalse";s:9:"signature";s:46:"assertFalse($condition, string $message): void";s:10:"visibility";s:6:"public";s:9:"startLine";i:28;s:7:"endLine";i:28;s:3:"ccn";i:0;}s:8:"seeIndex";a:6:{s:10:"methodName";s:8:"seeIndex";s:9:"signature";s:29:"seeIndex(string $index): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:30;s:7:"endLine";i:33;s:3:"ccn";i:1;}s:11:"notSeeIndex";a:6:{s:10:"methodName";s:11:"notSeeIndex";s:9:"signature";s:32:"notSeeIndex(string $index): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:35;s:7:"endLine";i:38;s:3:"ccn";i:1;}s:15:"assertSameIndex";a:6:{s:10:"methodName";s:15:"assertSameIndex";s:9:"signature";s:57:"assertSameIndex(string $index, string $expectedDef): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:40;s:7:"endLine";i:46;s:3:"ccn";i:1;}s:17:"assertRegExpIndex";a:6:{s:10:"methodName";s:17:"assertRegExpIndex";s:9:"signature";s:59:"assertRegExpIndex(string $index, string $expectedDef): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:48;s:7:"endLine";i:54;s:3:"ccn";i:2;}s:17:"dontSeeConstraint";a:6:{s:10:"methodName";s:17:"dontSeeConstraint";s:9:"signature";s:53:"dontSeeConstraint(string $table, string $index): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:56;s:7:"endLine";i:59;s:3:"ccn";i:1;}s:13:"seeConstraint";a:6:{s:10:"methodName";s:13:"seeConstraint";s:9:"signature";s:49:"seeConstraint(string $table, string $index): void";s:10:"visibility";s:9:"protected";s:9:"startLine";i:61;s:7:"endLine";i:64;s:3:"ccn";i:1;}s:15:"getIndexListing";a:6:{s:10:"methodName";s:15:"getIndexListing";s:9:"signature";s:32:"getIndexListing($index): ?string";s:10:"visibility";s:7:"private";s:9:"startLine";i:66;s:7:"endLine";i:71;s:3:"ccn";i:2;}s:22:"existConstraintOnTable";a:6:{s:10:"methodName";s:22:"existConstraintOnTable";s:9:"signature";s:58:"existConstraintOnTable(string $table, string $index): bool";s:10:"visibility";s:7:"private";s:9:"startLine";i:73;s:7:"endLine";i:84;s:3:"ccn";i:2;}}}}s:11:"functionsIn";a:0:{}s:14:"linesOfCodeFor";a:3:{s:11:"linesOfCode";i:86;s:18:"commentLinesOfCode";i:3;s:21:"nonCommentLinesOfCode";i:83;}s:15:"ignoredLinesFor";a:74:{i:0;i:12;i:1;i:13;i:2;i:14;i:3;i:15;i:4;i:16;i:5;i:17;i:6;i:18;i:7;i:19;i:8;i:20;i:9;i:21;i:10;i:22;i:11;i:23;i:12;i:24;i:13;i:25;i:14;i:26;i:15;i:27;i:16;i:28;i:17;i:29;i:18;i:30;i:19;i:31;i:20;i:32;i:21;i:33;i:22;i:34;i:23;i:35;i:24;i:36;i:25;i:37;i:26;i:38;i:27;i:39;i:28;i:40;i:29;i:41;i:30;i:42;i:31;i:43;i:32;i:44;i:33;i:45;i:34;i:46;i:35;i:47;i:36;i:48;i:37;i:49;i:38;i:50;i:39;i:51;i:40;i:52;i:41;i:53;i:42;i:54;i:43;i:55;i:44;i:56;i:45;i:57;i:46;i:58;i:47;i:59;i:48;i:60;i:49;i:61;i:50;i:62;i:51;i:63;i:52;i:64;i:53;i:65;i:54;i:66;i:55;i:67;i:56;i:68;i:57;i:69;i:58;i:70;i:59;i:71;i:60;i:72;i:61;i:73;i:62;i:74;i:63;i:75;i:64;i:76;i:65;i:77;i:66;i:78;i:67;i:79;i:68;i:80;i:69;i:81;i:70;i:82;i:71;i:83;i:72;i:84;i:73;i:85;}s:17:"executableLinesIn";a:22:{i:14;i:1;i:16;i:2;i:18;i:3;i:24;i:4;i:26;i:5;i:28;i:6;i:32;i:7;i:37;i:8;i:42;i:9;i:44;i:10;i:45;i:11;i:50;i:12;i:52;i:13;i:53;i:14;i:58;i:15;i:63;i:16;i:68;i:17;i:70;i:18;i:75;i:19;i:81;i:19;i:82;i:20;i:83;i:21;}}